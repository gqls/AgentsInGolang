# 1. First, let's make sure the ingress-nginx namespace exists
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
---
# 2. Create ingress controller deployment and service (modified version of your existing files)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: ingress-nginx
        app.kubernetes.io/name: ingress-nginx
    spec:
      serviceAccountName: ingress-nginx
      containers:
      - name: controller
        image: registry.k8s.io/ingress-nginx/controller:v1.8.1
        args:
          - /nginx-ingress-controller
          - --publish-service=ingress-nginx/ingress-nginx-controller
          - --election-id=ingress-nginx-leader
          - --controller-class=k8s.io/ingress-nginx
          - --ingress-class=nginx
          - --configmap=ingress-nginx/ingress-nginx-controller
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 30080
    - name: https
      port: 443
      targetPort: 443
      nodePort: 30443
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/component: controller
---
# 3. Ingress resource for workdomain.co.uk
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: workdomain-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: workdomain.co.uk
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: project-tracker-service
            port:
              number: 80
---
# 4. Ingress resource for felines.uk
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: felines-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: felines.uk
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: feline-imagery-service
            port:
              number: 80
      - path: /feline-imagery
        pathType: Prefix
        backend:
          service:
            name: feline-imagery-service
            port:
              number: 8088
---
# 5. ConfigMap for nginx controller
apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
data:
  use-forwarded-headers: "true"
  compute-full-forwarded-for: "true"
  use-proxy-protocol: "false"
