apiVersion: apps/v1
kind: Deployment
metadata:
 name: ingress-nginx-controller
 namespace: ingress-nginx
spec:
 selector:
   matchLabels:
     app.kubernetes.io/component: controller
     app.kubernetes.io/instance: ingress-nginx
     app.kubernetes.io/name: ingress-nginx
 replicas: 1
 template:
   metadata:
     labels:
       app.kubernetes.io/component: controller
       app.kubernetes.io/instance: ingress-nginx
       app.kubernetes.io/name: ingress-nginx
   spec:
     serviceAccountName: ingress-nginx
     nodeSelector:
       kubernetes.io/hostname: aak8s-worker-1
     containers:
     - name: controller
       image: registry.k8s.io/ingress-nginx/controller:v1.8.1
       args:
         - /nginx-ingress-controller
         - --publish-service=ingress-nginx/ingress-nginx-controller
         - --election-id=ingress-nginx-leader
         - --controller-class=k8s.io/ingress-nginx
         - --ingress-class=nginx
         - --configmap=ingress-nginx/ingress-nginx-controller
       ports:
       - containerPort: 80
         name: http
         protocol: TCP
       - containerPort: 443
         name: https
         protocol: TCP
       - containerPort: 8443
         name: webhook
         protocol: TCP
       env:
       - name: POD_NAME
         valueFrom:
           fieldRef:
             fieldPath: metadata.name
       - name: POD_NAMESPACE
         valueFrom:
           fieldRef:
             fieldPath: metadata.namespace
       - name: LD_PRELOAD
         value: /usr/local/lib/libmimalloc.so
       resources:
         requests:
           cpu: 100m
           memory: 90Mi
       securityContext:
         allowPrivilegeEscalation: true
         capabilities:
           add:
           - NET_BIND_SERVICE
           drop:
           - ALL
         runAsNonRoot: true
         runAsUser: 101
